<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <Company>Ghanavas - https://ghanavats.co.uk</Company>
        <Authors>Saeed Ghanavat</Authors>
        <Description>"Defines the abstraction for domain entity factories following DDD principles. 
            Includes the IDomainFactory interface and configuration structures such as DomainFactoryOption. 
            Ideal for applications that depend on abstractions, want to mock factories for testing, 
            or create custom implementations without referencing the concrete Domain.Factory logic.
        </Description>

        <PackageId>Ghanavats.Domain.Factory.Abstractions</PackageId>
        <Title>Ghanavats.Domain.Factory.Abstractions</Title>
        <PackageTags>DDD, domain-driven-design, factory, abstraction, 
            aggregate-root, contract, clean-architecture
        </PackageTags>
        <RepositoryType>git</RepositoryType>
        <RepositoryUrl>https://github.com/ghanavat/Domain.Factory</RepositoryUrl>
        <Version>1.0.2</Version>

        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
    </PropertyGroup>

    <ItemGroup>
        <None Include="docs\README.md" Pack="True" PackagePath=""/>
        <None Include="LICENSE" Pack="True" PackagePath=""/>
    </ItemGroup>
    
    <ItemGroup>
      <PackageReference Include="Ghanavats.Domain.Primitives" />
    </ItemGroup>

</Project>
